 ------
 Usage
 ------
 Lukas Theussl
 ------
 12 September 2007
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Using the PDF plugin

  The Maven PDF Plugin allows you generate a PDF document of your documentation.

* Using the PDF plugin from the command-line

  The PDF plugin can be called to execute from the command-line without any
  additional configurations.  Like the other plugins, to run the PDF plugin,
  you use:

+-----
  mvn pdf:pdf
+-----

  where the first <<<pdf>>> refers to the plugin's alias, and the second
  <<<pdf>>> refers to a plugin goal.

* Running the PDF plugin automatically during a build

  The PDF plugin can be put into a project's pom.xml so that it gets executed
  everytime the project is built.  Below is a sample configuration
  (to put into the list of <<<\<plugins\>>>> in the <<<\<build\>>>>
  section of your <<<pom.xml>>>) for running the
  PDF plugin in the <<<site>>> phase everytime the project is built:

%{snippet|id=configuration|file=pom.xml}

* Document descriptor

  By default, the pdf plugin processes all source files as specified
  in the site-plugins's <<<site.xml>>>. You can customize
  which files to include in which order by using a document descriptor
  (by default <<<src/site/pdf.xml>>>). An example is given below:

%{snippet|id=docDescriptor|file=src/site/pdf.xml}

  The <<<meta>>> information is only used for the pdf cover page if
  no <<<cover>>> element is given. The <<<toc>>> generates a Table
  of Contents and specifies the order of files to include in the pdf.
  For a complete description of the file format, see the
  {{{http://maven.apache.org/doxia/doxia/doxia-core/document.html}Document Model Reference}}.

* Configuration properties

  All the layout properties that are used for the pdf conversion are read
  from a default configuration file. The properties in this file may be
  overridden by  using a custom configuration file <<<pdf-config.xml>>>
  located in <<<src/sire/resources/>>>.

  The format of this file has to be exactly the same as the original
  {{{http://svn.apache.org/repos/asf/maven/doxia/doxia/trunk/doxia-modules/doxia-module-fo/src/main/resources/fo-styles.xslt}default configuration file}}.
  However, you only need to specify the properties that you want to override,
  <e.g.> to change the font size of pre-formatted text, you could use:

+-----
<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns:fo="http://www.w3.org/1999/XSL/Format" version="1.0">

    <xsl:attribute-set name="body.pre" use-attribute-sets="base.pre.style">
        <xsl:attribute name="font-size">8pt</xsl:attribute>
    </xsl:attribute-set>

</xsl:stylesheet>
+-----
