
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import org.codehaus.plexus.util.*;

boolean result = true;

try
{
    final File siteDirectory = new File ( basedir, "webhost.company.com" );
    if ( !siteDirectory.exists() || !siteDirectory.isDirectory() )
    {
        System.err.println( "site is missing or not a directory." );
        return false;
    }

    final File deployDirectory = new File ( siteDirectory, "deploy" );
    if ( !deployDirectory.exists() || !deployDirectory.isDirectory() )
    {
        System.err.println( "deployDirectory is missing or not a directory." );
        return false;
    }

    // junk directory (aggregator)
    File junkDirectory = new File ( deployDirectory, "junk" );
    if ( !junkDirectory.exists() || !junkDirectory.isDirectory() )
    {
        System.err.println( "junkDirectory is missing or not a directory." );
        return false;
    }

    File index = new File ( junkDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "no index file in junk or is a directory." );
        return false;
    }

    String content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    int indexOf = content.indexOf( "<a href=\"../index.html\" title=\"Aggregator\">Aggregator</a>" );
    if ( indexOf < 0)
    {
        System.err.println( "junk index.html is missing module link!" );
        return false;
    }

    // deploy directory (main site)
    index = new File ( deployDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "no index file in deploy or is a directory." );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    int index1 = content.indexOf( "<a href=\"www/website/deep/down/below/index.html\" title=\"Child and Module\">Child and Module</a>" );
    int index2 = content.indexOf( "<a href=\"inheriting_child/index.html\" title=\"Inheriting Child\">Inheriting Child</a>" );
    int index3 = content.indexOf( "<a href=\"www/website/module/index.html\" title=\"Module\">Module</a>" );
    int index4 = content.indexOf( "<a href=\"\" title=\"Aggregator\">Aggregator</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "deploy index.html is missing module link!" );
        return false;
    }

    // parent directory
    File parentDirectory = new File ( deployDirectory, "www/website" );
    if ( !parentDirectory.exists() || !parentDirectory.isDirectory() )
    {
        System.err.println( "parentDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( parentDirectory, "index.html" );
    if ( index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in parent!" );
        return false;
    }

    // child_and_module
    File deepDownBelow = new File ( parentDirectory, "deep/down/below" );
    if ( !deepDownBelow.exists() || !deepDownBelow.isDirectory() )
    {
        System.err.println( "deepDownBelow is missing or not a directory." );
        return false;
    }

    index = new File ( deepDownBelow, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in deepDownBelow!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"breadcrumbs Parent\">breadcrumbs Parent</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs /Child\">breadcrumbs /Child</a>" );
    index3 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"links ./Parent\">links ./Parent</a>" );
    index4 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"Parent\">Parent</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "deepDownBelow index.html is missing links!" );
        return false;
    }

    // inheriting_child
    File inheritingChild = new File ( deployDirectory, "inheriting_child" );
    if ( !inheritingChild.exists() || !inheritingChild.isDirectory() )
    {
        System.err.println( "inheritingChild is missing or not a directory." );
        return false;
    }

    index = new File ( inheritingChild, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in inheritingChild!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../index.html\" title=\"breadcrumbs /Parent\">breadcrumbs /Parent</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs ./Child\">breadcrumbs ./Child</a>" );
    index3 = content.indexOf( "<a href=\"../index.html\" title=\"links Parent\">links Parent</a>" );
    index4 = content.indexOf( "<a href=\"../index.html\" title=\"Parent\">Parent</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "inheritingChild index.html is missing links!" );
        return false;
    }

    // module
    File moduleDirectory = new File ( parentDirectory, "module" );
    if ( !moduleDirectory.exists() || !moduleDirectory.isDirectory() )
    {
        System.err.println( "moduleDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( moduleDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in moduleDirectory!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs Module\">breadcrumbs Module</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"links ./Module\">links ./Module</a>" );
    index3 = content.indexOf( "<a href=\"../sub_module/index.html\" title=\"Sub-Module\">Sub-Module</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "moduleDirectory index.html has wrong links!" );
        return false;
    }


    // sub_module
    File subModuleDirectory = new File ( parentDirectory, "sub_module" );
    if ( !subModuleDirectory.exists() || !subModuleDirectory.isDirectory() )
    {
        System.err.println( "subModuleDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( subModuleDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in subModuleDirectory!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../module/index.html\" title=\"breadcrumbs /Module\">breadcrumbs /Module</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs ./SubModule\">breadcrumbs ./SubModule</a>" );
    index3 = content.indexOf( "<a href=\"../module/index.html\" title=\"links Module\">links Module</a>" );
    index4 = content.indexOf( "<a href=\"../module/index.html\" title=\"Module\">Module</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "moduleDirectory index.html has wrong links!" );
        return false;
    }


    // STAGING


    final File stageDirectory = new File ( siteDirectory, "staging" );
    if ( !stageDirectory.exists() || !stageDirectory.isDirectory() )
    {
        System.err.println( "stageDirectory is missing or not a directory." );
        return false;
    }

    // the created directory structure in
    //      target/it/site-inheritance/webhost.company.com/staging/
    // should match the deploy structure in
    //      target/it/site-inheritance/webhost.company.com/deploy/


    // junk directory (aggregator)
    junkDirectory = new File ( stageDirectory, "junk" );
    if ( !junkDirectory.exists() || !junkDirectory.isDirectory() )
    {
        System.err.println( "staging junkDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( junkDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "no index file in staging junk or is a directory." );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    int indexOf = content.indexOf( "<a href=\"../index.html\" title=\"Aggregator\">Aggregator</a>" );
    if ( indexOf < 0)
    {
        System.err.println( "staging junk index.html is missing module link!" );
        return false;
    }

    // deploy directory (main site)
    index = new File ( stageDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "no index file in staging or is a directory." );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    int index1 = content.indexOf( "<a href=\"www/website/deep/down/below/index.html\" title=\"Child and Module\">Child and Module</a>" );
    int index2 = content.indexOf( "<a href=\"inheriting_child/index.html\" title=\"Inheriting Child\">Inheriting Child</a>" );
    int index3 = content.indexOf( "<a href=\"www/website/module/index.html\" title=\"Module\">Module</a>" );
    int index4 = content.indexOf( "<a href=\"\" title=\"Aggregator\">Aggregator</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "staging index.html is missing module link!" );
        return false;
    }

    // parent directory
    parentDirectory = new File ( stageDirectory, "www/website" );
    if ( !parentDirectory.exists() || !parentDirectory.isDirectory() )
    {
        System.err.println( "staging parentDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( parentDirectory, "index.html" );
    if ( index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect staging index file in parent!" );
        return false;
    }

    // child_and_module
    deepDownBelow = new File ( parentDirectory, "deep/down/below" );
    if ( !deepDownBelow.exists() || !deepDownBelow.isDirectory() )
    {
        System.err.println( "staging deepDownBelow is missing or not a directory." );
        return false;
    }

    index = new File ( deepDownBelow, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in staging deepDownBelow!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"breadcrumbs Parent\">breadcrumbs Parent</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs /Child\">breadcrumbs /Child</a>" );
    index3 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"links ./Parent\">links ./Parent</a>" );
    index4 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"Parent\">Parent</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "staging deepDownBelow index.html is missing links!" );
        return false;
    }

    // inheriting_child
    inheritingChild = new File ( stageDirectory, "inheriting_child" );
    if ( !inheritingChild.exists() || !inheritingChild.isDirectory() )
    {
        System.err.println( "staging inheritingChild is missing or not a directory." );
        return false;
    }

    index = new File ( inheritingChild, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in staging inheritingChild!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../index.html\" title=\"breadcrumbs /Parent\">breadcrumbs /Parent</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs ./Child\">breadcrumbs ./Child</a>" );
    index3 = content.indexOf( "<a href=\"../index.html\" title=\"links Parent\">links Parent</a>" );
    index4 = content.indexOf( "<a href=\"../index.html\" title=\"Parent\">Parent</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "staging inheritingChild index.html is missing links!" );
        return false;
    }

    // module
    moduleDirectory = new File ( parentDirectory, "module" );
    if ( !moduleDirectory.exists() || !moduleDirectory.isDirectory() )
    {
        System.err.println( "staging moduleDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( moduleDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in staging moduleDirectory!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs Module\">breadcrumbs Module</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"links ./Module\">links ./Module</a>" );
    index3 = content.indexOf( "<a href=\"../sub_module/index.html\" title=\"Sub-Module\">Sub-Module</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "staging moduleDirectory index.html has wrong links!" );
        return false;
    }


    // sub_module
    subModuleDirectory = new File ( parentDirectory, "sub_module" );
    if ( !subModuleDirectory.exists() || !subModuleDirectory.isDirectory() )
    {
        System.err.println( "staging subModuleDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( subModuleDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in staging subModuleDirectory!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../module/index.html\" title=\"breadcrumbs /Module\">breadcrumbs /Module</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs ./SubModule\">breadcrumbs ./SubModule</a>" );
    index3 = content.indexOf( "<a href=\"../module/index.html\" title=\"links Module\">links Module</a>" );
    index4 = content.indexOf( "<a href=\"../module/index.html\" title=\"Module\">Module</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "staging moduleDirectory index.html has wrong links!" );
        return false;
    }

    // STAGE DEPLOY


    final File stageDeployDirectory = new File ( deployDirectory, "staging" );
    if ( !stageDeployDirectory.exists() || !stageDeployDirectory.isDirectory() )
    {
        System.err.println( "stageDeployDirectory is missing or not a directory." );
        return false;
    }

    // the created directory structure in
    //      target/it/site-inheritance/webhost.company.com/deploy/staging/
    // should match the deploy structure in
    //      target/it/site-inheritance/webhost.company.com/deploy/

    // junk directory (aggregator)
    junkDirectory = new File ( stageDeployDirectory, "junk" );
    if ( !junkDirectory.exists() || !junkDirectory.isDirectory() )
    {
        System.err.println( "stagedeploy junkDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( junkDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "no index file in stagedeploy junk or is a directory." );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    int indexOf = content.indexOf( "<a href=\"../index.html\" title=\"Aggregator\">Aggregator</a>" );
    if ( indexOf < 0)
    {
        System.err.println( "stagedeploy junk index.html is missing module link!" );
        return false;
    }

    // deploy directory (main site)
    index = new File ( stageDeployDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "no index file in stagedeploy or is a directory." );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    int index1 = content.indexOf( "<a href=\"www/website/deep/down/below/index.html\" title=\"Child and Module\">Child and Module</a>" );
    int index2 = content.indexOf( "<a href=\"inheriting_child/index.html\" title=\"Inheriting Child\">Inheriting Child</a>" );
    int index3 = content.indexOf( "<a href=\"www/website/module/index.html\" title=\"Module\">Module</a>" );
    int index4 = content.indexOf( "<a href=\"\" title=\"Aggregator\">Aggregator</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "stagedeploy index.html is missing module link!" );
        return false;
    }

    // parent directory
    parentDirectory = new File ( stageDeployDirectory, "www/website" );
    if ( !parentDirectory.exists() || !parentDirectory.isDirectory() )
    {
        System.err.println( "stagedeploy parentDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( parentDirectory, "index.html" );
    if ( index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in stagedeploy parent!" );
        return false;
    }

    // child_and_module
    deepDownBelow = new File ( parentDirectory, "deep/down/below" );
    if ( !deepDownBelow.exists() || !deepDownBelow.isDirectory() )
    {
        System.err.println( "stagedeploy deepDownBelow is missing or not a directory." );
        return false;
    }

    index = new File ( deepDownBelow, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in stagedeploy deepDownBelow!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"breadcrumbs Parent\">breadcrumbs Parent</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs /Child\">breadcrumbs /Child</a>" );
    index3 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"links ./Parent\">links ./Parent</a>" );
    index4 = content.indexOf( "<a href=\"../../../../../index.html\" title=\"Parent\">Parent</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "stagedeploy deepDownBelow index.html is missing links!" );
        return false;
    }

    // inheriting_child
    inheritingChild = new File ( stageDeployDirectory, "inheriting_child" );
    if ( !inheritingChild.exists() || !inheritingChild.isDirectory() )
    {
        System.err.println( "stagedeploy inheritingChild is missing or not a directory." );
        return false;
    }

    index = new File ( inheritingChild, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in stagedeploy inheritingChild!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../index.html\" title=\"breadcrumbs /Parent\">breadcrumbs /Parent</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs ./Child\">breadcrumbs ./Child</a>" );
    index3 = content.indexOf( "<a href=\"../index.html\" title=\"links Parent\">links Parent</a>" );
    index4 = content.indexOf( "<a href=\"../index.html\" title=\"Parent\">Parent</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 || index4 < 0 )
    {
        System.err.println( "stagedeploy inheritingChild index.html is missing links!" );
        return false;
    }

    // module
    moduleDirectory = new File ( parentDirectory, "module" );
    if ( !moduleDirectory.exists() || !moduleDirectory.isDirectory() )
    {
        System.err.println( "stagedeploy moduleDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( moduleDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in stagedeploy moduleDirectory!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs Module\">breadcrumbs Module</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"links ./Module\">links ./Module</a>" );
    index3 = content.indexOf( "<a href=\"../sub_module/index.html\" title=\"Sub-Module\">Sub-Module</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "stagedeploy moduleDirectory index.html has wrong links!" );
        return false;
    }


    // sub_module
    subModuleDirectory = new File ( parentDirectory, "sub_module" );
    if ( !subModuleDirectory.exists() || !subModuleDirectory.isDirectory() )
    {
        System.err.println( "stagedeploy subModuleDirectory is missing or not a directory." );
        return false;
    }

    index = new File ( subModuleDirectory, "index.html" );
    if ( !index.exists() || index.isDirectory() )
    {
        System.err.println( "incorrect index file in stagedeploy subModuleDirectory!" );
        return false;
    }

    content = IOUtil.toString ( new FileInputStream ( index ), "UTF-8" );
    index1 = content.indexOf( "<a href=\"../module/index.html\" title=\"breadcrumbs /Module\">breadcrumbs /Module</a>" );
    index2 = content.indexOf( "<a href=\"index.html\" title=\"breadcrumbs ./SubModule\">breadcrumbs ./SubModule</a>" );
    index3 = content.indexOf( "<a href=\"../module/index.html\" title=\"links Module\">links Module</a>" );
    index4 = content.indexOf( "<a href=\"../module/index.html\" title=\"Module\">Module</a>" );
    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "stagedeploy moduleDirectory index.html has wrong links!" );
        return false;
    }

}
catch( IOException e )
{
    e.printStackTrace();
    result = false;
}

return result;
