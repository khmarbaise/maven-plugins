/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.util.*;
import java.util.regex.*;
import org.codehaus.plexus.util.*;

try
{
    File siteDir = new File( basedir, "target/site" );
    if ( !siteDir.isDirectory() )
    {
        System.out.println( "Site directory not existent: " + siteDir );
        return false;
    }

    String[] reports = { "dependencies",
                         "index",
                         "integration",
                         "issue-tracking",
                         "license",
                         "mail-lists",
                         "plugin-management",
                         "plugins",
                         "project-info",
                         "project-summary",
                         "source-repository",
                         "team-list"
                       };
    for ( String report : reports )
    {
        File reportFile = new File( siteDir, report + ".html" );
        if ( !reportFile.isFile() )
        {
            System.out.println( "Report file not existent: " + reportFile );
            return false;
        }
    }

    File maillist = new File( siteDir, "mail-lists.html");
    String content = FileUtils.fileRead( maillist, "UTF-8" );
    if ( !content.contains( "mail list intro text foo" ) )
    {
        System.err.println( "mail-lists.html doesn't contain mail list intro text foo" );
        return false;
    }

    File dependencies = new File( siteDir, "dependencies.html");
    content = FileUtils.fileRead( dependencies, "UTF-8" );
    if ( !content.contains( "doxia-core-1.2.jar" ) )
    {
        System.err.println( "dependencies.html doesn't contain doxia-core-1.2.jar" );
        return false;
    }
}
catch( Throwable t )
{
    t.printStackTrace();
    return false;
}

return true;
